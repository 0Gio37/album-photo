<!DOCTYPE html>
<html lang="FR-fr">

<head>
    <meta charset="UTF-8">
    <title>{% block title %}My Album Photo{% endblock %}</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.3.1/css/all.css">
    <link rel="shortcut icon" type="image/x-icon" href="/img/favicon.ico">

    {% block stylesheets %}
        {{ encore_entry_link_tags('app') }}
    {% endblock %}

    {% block javascripts %}
        {{ encore_entry_script_tags('app') }}
    {% endblock %}

    <style>
        body, header, aside, nav, .main-input{
        background-color: #161616;
        }
        .modal {
            transition: opacity 0.25s ease;
        }
        body.modal-active {
           overflow-x: hidden;
            overflow-y: visible !important;
        }
        .opacity-95 {opacity: .95;}

        a>img {
            -webkit-transform: scale(1);
            transform: scale(1);
            -webkit-transition: .3s ease-in-out;
            transition: .3s ease-in-out;
        }
        a>img:hover {
            -webkit-transform: scale(1.07);
            transform: scale(1.07);
            border: solid greenyellow;
            box-shadow: yellowgreen;
        }
    </style>
</head>

<body class="h-screen font-sans leading-normal tracking-normal mt-12 bg-customColorMainBG">

{% if app.user.isValid is same as(false) %}

    <section class="mt-48 text-center">
        <h1 class="text-base text-5xl text-blue-600 mb-12">Accès non autorisé</h1>
        <h2 class="text-base text-2xl text-gray-300 mb-12">Compte inexistant ou non encore validé par l'administrateur</h2>
        <h2 class="text-base text-2xl text-gray-300 mb-12">Pour plus d'informations : <a href="#" class="underline">contact@famille-messanges.fr</a></h2>
        <div class="flex justify-center m-10 px-20">
            <a href="{{ path('logout') }}">
                <button class="px-3 py-4 text-sm rounded-lg text-gray-300 bg-red-900 hover:bg-red-700">
                    Retour à la Page de connexion
                </button>
            </a>
        </div>
    </section>

    {%  else %}
        {% if app.request.get('_route') is same as('detailsPhoto') %}
        {%  else %}
            <header>
                {% include 'component/header.html.twig' %}
            </header>
        {% endif %}
        {% block body %}{% endblock %}
{% endif %}



<script>
    /*responsive menu with Hamburger */
    document.getElementById("menuNav").addEventListener("click", ()=> {
        document.getElementById("menuList").classList.toggle("hidden")
    });
    document.getElementById("closeBurgerList").addEventListener("click", ()=> {
        document.getElementById("menuList").classList.toggle("hidden")
    });

    /*Toggle dropdown list*/
    function toggleDD(myDropMenu) {
        document.getElementById(myDropMenu).classList.toggle("invisible");
    }
    /*Filter dropdown options*/
    function filterDD(myDropMenu, myDropMenuSearch) {
        let input, filter, ul, li, a, i;
        input = document.getElementById(myDropMenuSearch);
        filter = input.value.toUpperCase();
        div = document.getElementById(myDropMenu);
        a = div.getElementsByTagName("a");
        for (i = 0; i < a.length; i++) {
            if (a[i].innerHTML.toUpperCase().indexOf(filter) > -1) {
                a[i].style.display = "";
            } else {
                a[i].style.display = "none";
            }
        }
    }
    /* Close the dropdown menu if the user clicks outside of it */
    window.onclick = function(event) {
        if (!event.target.matches(".drop-button") && !event.target.matches(".drop-search")) {
            let dropdowns = document.getElementsByClassName("dropdownlist");
            for (let i = 0; i < dropdowns.length; i++) {
                let openDropdown = dropdowns[i];
                if (!openDropdown.classList.contains("invisible")) {
                    openDropdown.classList.add("invisible");
                }
            }
        }
    }

    //Modal management to search pages
    let openModal = document.querySelectorAll('.modal-open')
    for (let i = 0; i < openModal.length; i++) {
        openModal[i].addEventListener("click", toggleModal);
    }
    let closeModal = document.querySelector('.modal-close');
    closeModal.addEventListener("click", toggleModal);

    //display modal on/off
    function toggleModal () {
        const body = document.querySelector('body')
        const modal = document.querySelector('.modal')
        modal.classList.toggle('opacity-0')
        modal.classList.toggle('pointer-events-none')
        body.classList.toggle('modal-active')
    }

    // display modal for each searching items from aside bar
    //convert nodeList given by queryselectorAll in array
    let activeModal =  Array.from(document.querySelectorAll('.active-modal'));
    let modalManage =  Array.from(document.querySelectorAll('.modal-manage'));

    for (let i in activeModal){
        activeModal[i].addEventListener('click', () => {
            modalManage.map(item => item.setAttribute("style", "display:none"));
            modalManage[i].setAttribute("style", "display:bloc");
        })
}

    document.onkeydown = function(evt) {
        evt = evt || window.event
        let isEscape = false
        if ("key" in evt) {
            isEscape = (evt.key === "Escape" || evt.key === "Esc")
        } else {
            isEscape = (evt.keyCode === 27)
        }
        if (isEscape && document.body.classList.contains("modal-active")) {
            toggleModal()
        }
    };




</script>

</body>
</html>
